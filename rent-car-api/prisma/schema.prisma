// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  role      String   @default("customer")
  token     Token?
  Rental    Rental[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}

model Car {
  id        String   @id @default(uuid())
  name      String
  brand     String
  price     Float
  quantity  Int
  image     String?
  Rental    Rental[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}

model Rental {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  carId     String   @map("car_id")
  startDate DateTime @map("start_date")
  endDate   DateTime @map("end_date")
  quantity  Int      @default(1)
  price     Float
  status    String   @default("pending")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  car       Car      @relation(fields: [carId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}

model Token {
  id        String   @id @default(cuid())
  userId    String   @unique @map("user_id")
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
